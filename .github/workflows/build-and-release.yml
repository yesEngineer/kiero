name: Build Kiero
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        build_type: [Debug, Release]
        include:
          - os: windows-latest
            generator: "Visual Studio 17 2022"
            arch: "-A x64"
          - os: ubuntu-latest
            generator: "Unix Makefiles"
            arch: ""
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: false  # Only if you don't actually need submodules
    
    # Use setup-msbuild for Windows
    - name: Setup MSBuild (Windows)
      if: matrix.os == 'windows-latest'
      uses: microsoft/setup-msbuild@v2
    
    # Install Vulkan SDK (Windows) - More efficient approach
    - name: Install Vulkan SDK (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        $vulkanVersion = "1.3.290.0"
        $url = "https://sdk.lunarg.com/sdk/download/$vulkanVersion/windows/VulkanSDK-$vulkanVersion-Installer.exe"
        $installer = "$env:TEMP\VulkanSDK-Installer.exe"
        Write-Host "Downloading Vulkan SDK..."
        Invoke-WebRequest -Uri $url -OutFile $installer -TimeoutSec 300
        Write-Host "Installing Vulkan SDK..."
        Start-Process -Wait -FilePath $installer -ArgumentList @("/S") -TimeoutSec 600
        $vulkanPath = "C:\VulkanSDK\$vulkanVersion"
        if (Test-Path $vulkanPath) {
          echo "VULKAN_SDK=$vulkanPath" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "$vulkanPath\Bin" | Out-File -FilePath $env:GITHUB_PATH -Append
        } else {
          Write-Error "Vulkan SDK installation failed"
          exit 1
        }
    
    # Install Vulkan SDK (Ubuntu) - Updated for newer Ubuntu
    - name: Install Vulkan SDK (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo tee /etc/apt/trusted.gpg.d/lunarg.asc
        sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.3.290-jammy.list https://packages.lunarg.com/vulkan/1.3.290/lunarg-vulkan-1.3.290-jammy.list
        sudo apt update
        sudo apt install -y vulkan-sdk
    
    # Configure CMake with better error handling
    - name: Configure CMake
      run: |
        cmake -B build ${{ matrix.arch }} -G "${{ matrix.generator }}" -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_VERBOSE_MAKEFILE=ON
      env:
        VULKAN_SDK: ${{ env.VULKAN_SDK }}
    
    # Build with better error handling
    - name: Build
      run: |
        cmake --build build --config ${{ matrix.build_type }} --verbose
    
    # Upload artifacts with better paths
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: kiero-${{ matrix.os }}-${{ matrix.build_type }}
        path: |
          build/lib/
          build/Release/
          build/Debug/
        if-no-files-found: warn