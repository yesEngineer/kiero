name: Build and Release Kiero

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        config: [Debug, Release]
        platform: [x64, Win32]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
      
    - name: Setup CMake
      uses: lukka/get-cmake@latest
      
    - name: Configure CMake
      run: |
        cmake -B build -S . -A ${{ matrix.platform }} -DCMAKE_BUILD_TYPE=${{ matrix.config }}
        
    - name: Build
      run: |
        cmake --build build --config ${{ matrix.config }} --parallel
        
    - name: Create artifact directory
      run: |
        mkdir -p artifacts/${{ matrix.platform }}/${{ matrix.config }}
        
    - name: Copy build artifacts
      run: |
        # Copy static library
        if (Test-Path "build/${{ matrix.config }}/kiero.lib") {
          Copy-Item "build/${{ matrix.config }}/kiero.lib" "artifacts/${{ matrix.platform }}/${{ matrix.config }}/"
        }
        if (Test-Path "build/lib/${{ matrix.config }}/kiero.lib") {
          Copy-Item "build/lib/${{ matrix.config }}/kiero.lib" "artifacts/${{ matrix.platform }}/${{ matrix.config }}/"
        }
        
        # Copy header
        Copy-Item "kiero.h" "artifacts/${{ matrix.platform }}/${{ matrix.config }}/"
        
        # Copy MinHook lib (if exists)
        if (Test-Path "build/_deps/minhook-build/${{ matrix.config }}/minhook.lib") {
          Copy-Item "build/_deps/minhook-build/${{ matrix.config }}/minhook.lib" "artifacts/${{ matrix.platform }}/${{ matrix.config }}/"
        }
        if (Test-Path "build/_deps/minhook-build/lib/${{ matrix.config }}/minhook.lib") {
          Copy-Item "build/_deps/minhook-build/lib/${{ matrix.config }}/minhook.lib" "artifacts/${{ matrix.platform }}/${{ matrix.config }}/"
        }
      shell: powershell
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: kiero-${{ matrix.platform }}-${{ matrix.config }}
        path: artifacts/${{ matrix.platform }}/${{ matrix.config }}/
        retention-days: 30

  release:
    needs: build
    runs-on: windows-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download x64 Release artifact
      uses: actions/download-artifact@v4
      with:
        name: kiero-x64-Release
        path: x64-release
        
    - name: Download x86 Release artifact
      uses: actions/download-artifact@v4
      with:
        name: kiero-Win32-Release
        path: x86-release
        
    - name: Rename libraries
      run: |
        # Rename the lib files to distinguish platforms
        if (Test-Path "x64-release/kiero.lib") {
          Rename-Item "x64-release/kiero.lib" "kiero-x64.lib"
        }
        if (Test-Path "x86-release/kiero.lib") {
          Rename-Item "x86-release/kiero.lib" "kiero-x86.lib"
        }
      shell: powershell
        
    - name: Extract version
      id: version
      run: |
        $version = $env:GITHUB_REF -replace "refs/tags/", ""
        echo "version=$version" >> $env:GITHUB_OUTPUT
      shell: powershell
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: Kiero ${{ steps.version.outputs.version }}
        draft: false
        prerelease: ${{ contains(steps.version.outputs.version, '-') }}
        body: |
          ## Kiero Library Release ${{ steps.version.outputs.version }}
          
          ### What's Included
          - `kiero-x64.lib` - 64-bit release library
          - `kiero-x86.lib` - 32-bit release library
          
          ### Usage
          1. Download the appropriate .lib file for your platform
          2. Add to your project's library dependencies
          3. Include `kiero.h` in your project (from the repository)
          4. Link against the library in your build system
          
          ### Platform Support
          - Windows x64 (Release)
          - Windows x86 (Release)
          
        files: |
          x64-release/kiero-x64.lib
          x86-release/kiero-x86.lib
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}